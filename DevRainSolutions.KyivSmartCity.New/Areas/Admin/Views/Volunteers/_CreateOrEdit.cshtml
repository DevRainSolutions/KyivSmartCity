@model DevRainSolutions.KyivSmartCity.New.Models.Volunteer

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.Email)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Email)
    @Html.ValidationMessageFor(model => model.Email)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.FirstName)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.FirstName)
    @Html.ValidationMessageFor(model => model.FirstName)
</div>


<div class="editor-label">
    @Html.LabelFor(model => model.MiddleName)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.MiddleName)
    @Html.ValidationMessageFor(model => model.MiddleName)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.LastName)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.LastName)
    @Html.ValidationMessageFor(model => model.LastName)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.RegistrationDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.RegistrationDate)
    @Html.ValidationMessageFor(model => model.RegistrationDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.City)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.City)
    @Html.ValidationMessageFor(model => model.City)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Phone)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Phone)
    @Html.ValidationMessageFor(model => model.Phone)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Notes)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Notes)
    @Html.ValidationMessageFor(model => model.Notes)
</div>

<div class="editor-label">
    Group
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.GroupId, ((IEnumerable<DevRainSolutions.KyivSmartCity.New.Models.Group>)ViewBag.PossibleGroups).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.Title), 
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.GroupId)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.GroupId)
</div>
